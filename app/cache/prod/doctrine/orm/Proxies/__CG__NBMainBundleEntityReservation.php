<?php

namespace Proxies\__CG__\NB\MainBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Reservation extends \NB\MainBundle\Entity\Reservation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'id', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'voyages', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'doj', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'dor', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'confirmed', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'dateAdd', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'seats', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'dateUpd', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'channel', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'pointEmbarquement', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'channel_id', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'tickets');
        }

        return array('__isInitialized__', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'id', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'voyages', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'doj', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'dor', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'confirmed', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'dateAdd', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'seats', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'dateUpd', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'channel', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'pointEmbarquement', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'channel_id', '' . "\0" . 'NB\\MainBundle\\Entity\\Reservation' . "\0" . 'tickets');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Reservation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setTickets(\NB\MainBundle\Entity\Ticket $ticket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTickets', array($ticket));

        return parent::setTickets($ticket);
    }

    /**
     * {@inheritDoc}
     */
    public function getTickets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTickets', array());

        return parent::getTickets();
    }

    /**
     * {@inheritDoc}
     */
    public function getPointEmbarquement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointEmbarquement', array());

        return parent::getPointEmbarquement();
    }

    /**
     * {@inheritDoc}
     */
    public function setPointEmbarquement($pointEmbarquement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPointEmbarquement', array($pointEmbarquement));

        return parent::setPointEmbarquement($pointEmbarquement);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getVoyages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVoyages', array());

        return parent::getVoyages();
    }

    /**
     * {@inheritDoc}
     */
    public function setVoyages(\NB\MainBundle\Entity\Voyages $voyages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVoyages', array($voyages));

        return parent::setVoyages($voyages);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmed($confirmed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmed', array($confirmed));

        return parent::setConfirmed($confirmed);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmed', array());

        return parent::getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd($dateAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', array($dateAdd));

        return parent::setDateAdd($dateAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', array());

        return parent::getDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function getDoj()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDoj', array());

        return parent::getDoj();
    }

    /**
     * {@inheritDoc}
     */
    public function setDoj($doj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDoj', array($doj));

        return parent::setDoj($doj);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpDown()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpDown', array());

        return parent::isUpDown();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpDown($upDown)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpDown', array($upDown));

        return parent::setUpDown($upDown);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpd', array());

        return parent::getDateUpd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpd($dateUpd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpd', array($dateUpd));

        return parent::setDateUpd($dateUpd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDor', array());

        return parent::getDor();
    }

    /**
     * {@inheritDoc}
     */
    public function setDor($dor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDor', array($dor));

        return parent::setDor($dor);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeats', array());

        return parent::getSeats();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeats($seats)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeats', array($seats));

        return parent::setSeats($seats);
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel($channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', array($channel));

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', array());

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelId($channel_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelId', array($channel_id));

        return parent::setChannelId($channel_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelId', array());

        return parent::getChannelId();
    }

}
